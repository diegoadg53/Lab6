
Lab6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  00000890  00000924  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000890  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  008001be  008001be  000009e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000957  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ff  00000000  00000000  0000142f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f3  00000000  00000000  00001b2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  00001f24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d9  00000000  00000000  00001fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000115  00000000  00000000  000023c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000024d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 39 01 	jmp	0x272	; 0x272 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 4c 01 	jmp	0x298	; 0x298 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e9       	ldi	r30, 0x90	; 144
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 3b       	cpi	r26, 0xBE	; 190
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae eb       	ldi	r26, 0xBE	; 190
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 3c       	cpi	r26, 0xC1	; 193
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cd 00 	call	0x19a	; 0x19a <main>
  9e:	0c 94 46 04 	jmp	0x88c	; 0x88c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initUART57600>:
    }
}

void initUART57600(void){
	// Configurar pines TX y RX
	DDRD &= ~(1<<DDD0);
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	8e 7f       	andi	r24, 0xFE	; 254
  aa:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1<<DDD1);
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	8a b9       	out	0x0a, r24	; 10
	
	//Configurar A modo Fast U2X0 = 1
	UCSR0A = 0;
  b2:	e0 ec       	ldi	r30, 0xC0	; 192
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	10 82       	st	Z, r1
	UCSR0A |= (1<<U2X0);
  b8:	80 81       	ld	r24, Z
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	80 83       	st	Z, r24
	
	//Configurar B Habilitar ISR RX
	UCSR0B = 0;
  be:	e1 ec       	ldi	r30, 0xC1	; 193
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	10 82       	st	Z, r1
	UCSR0B |= (1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
  c4:	80 81       	ld	r24, Z
  c6:	88 69       	ori	r24, 0x98	; 152
  c8:	80 83       	st	Z, r24
	
	// Paso 4: Configurar C Frame: 8 bits datos, no paridad, 1 bit stop
	UCSR0C = 0;
  ca:	e2 ec       	ldi	r30, 0xC2	; 194
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	10 82       	st	Z, r1
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
  d0:	80 81       	ld	r24, Z
  d2:	86 60       	ori	r24, 0x06	; 6
  d4:	80 83       	st	Z, r24
	
	// Baudrate = 57600
	UBRR0 = 34;
  d6:	82 e2       	ldi	r24, 0x22	; 34
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  de:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  e2:	08 95       	ret

000000e4 <writeUART>:
	
}

void writeUART(char caracter){
	while (!(UCSR0A & (1<<UDRE0)));
  e4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  e8:	95 ff       	sbrs	r25, 5
  ea:	fc cf       	rjmp	.-8      	; 0xe4 <writeUART>
	UDR0 = caracter;
  ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  f0:	08 95       	ret

000000f2 <writeTextUART>:
}

void writeTextUART(char* texto){
  f2:	ac 01       	movw	r20, r24
	uint8_t i;
	for(i = 0; texto[i] != '\0'; i++){
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	07 c0       	rjmp	.+14     	; 0x106 <writeTextUART+0x14>
		while (!(UCSR0A & (1<<UDRE0)));
  f8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  fc:	95 ff       	sbrs	r25, 5
  fe:	fc cf       	rjmp	.-8      	; 0xf8 <writeTextUART+0x6>
		UDR0 = texto[i];
 100:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	UDR0 = caracter;
}

void writeTextUART(char* texto){
	uint8_t i;
	for(i = 0; texto[i] != '\0'; i++){
 104:	2f 5f       	subi	r18, 0xFF	; 255
 106:	fa 01       	movw	r30, r20
 108:	e2 0f       	add	r30, r18
 10a:	f1 1d       	adc	r31, r1
 10c:	30 81       	ld	r19, Z
 10e:	31 11       	cpse	r19, r1
 110:	f3 cf       	rjmp	.-26     	; 0xf8 <writeTextUART+0x6>
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0 = texto[i];
	}
	writeUART(10);
 112:	8a e0       	ldi	r24, 0x0A	; 10
 114:	0e 94 72 00 	call	0xe4	; 0xe4 <writeUART>
	writeUART(13);
 118:	8d e0       	ldi	r24, 0x0D	; 13
 11a:	0e 94 72 00 	call	0xe4	; 0xe4 <writeUART>
 11e:	08 95       	ret

00000120 <showMenu>:
}

void showMenu(void){
	writeTextUART("");
 120:	84 e8       	ldi	r24, 0x84	; 132
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("Escriba el número correspondiente a la acción a ejecutar:");
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	91 e0       	ldi	r25, 0x01	; 1
 12c:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("");
 130:	84 e8       	ldi	r24, 0x84	; 132
 132:	91 e0       	ldi	r25, 0x01	; 1
 134:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("1. Leer potenciómetro");
 138:	8a e3       	ldi	r24, 0x3A	; 58
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("");
 140:	84 e8       	ldi	r24, 0x84	; 132
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("2. Enviar ASCII");
 148:	80 e5       	ldi	r24, 0x50	; 80
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
	writeTextUART("");
 150:	84 e8       	ldi	r24, 0x84	; 132
 152:	91 e0       	ldi	r25, 0x01	; 1
 154:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
 158:	08 95       	ret

0000015a <init_ADC>:
}

void init_ADC(void){
	ADMUX = 0;
 15a:	ec e7       	ldi	r30, 0x7C	; 124
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	10 82       	st	Z, r1
	
	ADMUX |= (1<<REFS0);
 160:	80 81       	ld	r24, Z
 162:	80 64       	ori	r24, 0x40	; 64
 164:	80 83       	st	Z, r24
	
	ADMUX |= (1<<ADLAR);
 166:	80 81       	ld	r24, Z
 168:	80 62       	ori	r24, 0x20	; 32
 16a:	80 83       	st	Z, r24
	
	ADMUX |= 0x07;
 16c:	80 81       	ld	r24, Z
 16e:	87 60       	ori	r24, 0x07	; 7
 170:	80 83       	st	Z, r24
	
	ADCSRA = 0;
 172:	ea e7       	ldi	r30, 0x7A	; 122
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	10 82       	st	Z, r1
	
	ADCSRA = (1<<ADEN);
 178:	80 e8       	ldi	r24, 0x80	; 128
 17a:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADATE);
 17c:	80 81       	ld	r24, Z
 17e:	80 62       	ori	r24, 0x20	; 32
 180:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADIE);
 182:	80 81       	ld	r24, Z
 184:	88 60       	ori	r24, 0x08	; 8
 186:	80 83       	st	Z, r24
	
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
 188:	80 81       	ld	r24, Z
 18a:	87 60       	ori	r24, 0x07	; 7
 18c:	80 83       	st	Z, r24
	
	ADCSRB = 0;
 18e:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	
	ADCSRA |= (1<<ADSC);
 192:	80 81       	ld	r24, Z
 194:	80 64       	ori	r24, 0x40	; 64
 196:	80 83       	st	Z, r24
 198:	08 95       	ret

0000019a <main>:
volatile char bufferRX;
volatile uint8_t bandera_lectura = 0;
volatile uint8_t valor_pot = 0;

int main(void)
{
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	00 d0       	rcall	.+0      	; 0x1a0 <main+0x6>
 1a0:	00 d0       	rcall	.+0      	; 0x1a2 <main+0x8>
 1a2:	1f 92       	push	r1
 1a4:	cd b7       	in	r28, 0x3d	; 61
 1a6:	de b7       	in	r29, 0x3e	; 62
    initUART57600();
 1a8:	0e 94 53 00 	call	0xa6	; 0xa6 <initUART57600>
	DDRD |= 0xFC;
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	8c 6f       	ori	r24, 0xFC	; 252
 1b0:	8a b9       	out	0x0a, r24	; 10
	DDRB |= 0x03;
 1b2:	84 b1       	in	r24, 0x04	; 4
 1b4:	83 60       	ori	r24, 0x03	; 3
 1b6:	84 b9       	out	0x04, r24	; 4
	init_ADC();
 1b8:	0e 94 ad 00 	call	0x15a	; 0x15a <init_ADC>
	sei();
 1bc:	78 94       	sei
	//writeUART('\n');
	writeUART(10);
	writeUART(13);*/
	//writeTextUART("Hola Mundo aaaaa");
	
	PORTD &= ~(0xFC);
 1be:	8b b1       	in	r24, 0x0b	; 11
 1c0:	83 70       	andi	r24, 0x03	; 3
 1c2:	8b b9       	out	0x0b, r24	; 11
	PORTB &= ~(0x03);
 1c4:	85 b1       	in	r24, 0x05	; 5
 1c6:	8c 7f       	andi	r24, 0xFC	; 252
 1c8:	85 b9       	out	0x05, r24	; 5
	
    while (1) 
    {
		showMenu();
 1ca:	0e 94 90 00 	call	0x120	; 0x120 <showMenu>
		while (bandera_lectura == 0)
 1ce:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <bandera_lectura>
 1d2:	88 23       	and	r24, r24
 1d4:	e1 f3       	breq	.-8      	; 0x1ce <main+0x34>
		;
		bandera_lectura = 0;
 1d6:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <bandera_lectura>
		if (bufferRX == '1'){
 1da:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <bufferRX>
 1de:	81 33       	cpi	r24, 0x31	; 49
 1e0:	c9 f4       	brne	.+50     	; 0x214 <main+0x7a>
			char str_valor_pot[5];
			sprintf(str_valor_pot, "%d", valor_pot);
 1e2:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__data_end>
 1e6:	1f 92       	push	r1
 1e8:	8f 93       	push	r24
 1ea:	80 e6       	ldi	r24, 0x60	; 96
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	8e 01       	movw	r16, r28
 1f4:	0f 5f       	subi	r16, 0xFF	; 255
 1f6:	1f 4f       	sbci	r17, 0xFF	; 255
 1f8:	1f 93       	push	r17
 1fa:	0f 93       	push	r16
 1fc:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <sprintf>
			writeTextUART(str_valor_pot);
 200:	c8 01       	movw	r24, r16
 202:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	db cf       	rjmp	.-74     	; 0x1ca <main+0x30>
		} else if (bufferRX == '2') {
 214:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <bufferRX>
 218:	82 33       	cpi	r24, 0x32	; 50
 21a:	31 f5       	brne	.+76     	; 0x268 <main+0xce>
			writeTextUART("Escriba el valor ASCII a mandar: ");
 21c:	83 e6       	ldi	r24, 0x63	; 99
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
			writeTextUART("");
 224:	84 e8       	ldi	r24, 0x84	; 132
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
			while (bandera_lectura == 0)
 22c:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <bandera_lectura>
 230:	88 23       	and	r24, r24
 232:	e1 f3       	breq	.-8      	; 0x22c <main+0x92>
			;
			bandera_lectura = 0;
 234:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <bandera_lectura>
			while (!(UCSR0A & (1<<UDRE0)));
 238:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 23c:	85 ff       	sbrs	r24, 5
 23e:	fc cf       	rjmp	.-8      	; 0x238 <main+0x9e>
			UDR0 = bufferRX;
 240:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <bufferRX>
 244:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
			PORTD = (bufferRX<<2) & 0xFC;
 248:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <bufferRX>
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	8b b9       	out	0x0b, r24	; 11
			PORTB = (bufferRX>>6) & 0x03;
 258:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <bufferRX>
 25c:	82 95       	swap	r24
 25e:	86 95       	lsr	r24
 260:	86 95       	lsr	r24
 262:	83 70       	andi	r24, 0x03	; 3
 264:	85 b9       	out	0x05, r24	; 5
 266:	b1 cf       	rjmp	.-158    	; 0x1ca <main+0x30>
			
		} else {
			writeTextUART("Valor inválido, por favor aprenda a seguir instrucciones");	
 268:	85 e8       	ldi	r24, 0x85	; 133
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	0e 94 79 00 	call	0xf2	; 0xf2 <writeTextUART>
 270:	ac cf       	rjmp	.-168    	; 0x1ca <main+0x30>

00000272 <__vector_18>:
	ADCSRB = 0;
	
	ADCSRA |= (1<<ADSC);
}

ISR(USART_RX_vect){
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	8f 93       	push	r24
	bandera_lectura = 1;
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <bandera_lectura>
	bufferRX = UDR0;
 284:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 288:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <bufferRX>
	//UDR0 = bufferRX;
	
	/*PORTD = (bufferRX<<2) & 0xFC;
	PORTB = (bufferRX>>6) & 0x03;*/
	
}
 28c:	8f 91       	pop	r24
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <__vector_21>:

ISR(ADC_vect){
 298:	1f 92       	push	r1
 29a:	0f 92       	push	r0
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	0f 92       	push	r0
 2a0:	11 24       	eor	r1, r1
 2a2:	8f 93       	push	r24
	valor_pot = ADCH;
 2a4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 2a8:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <__data_end>
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <sprintf>:
 2b8:	ae e0       	ldi	r26, 0x0E	; 14
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	e2 e6       	ldi	r30, 0x62	; 98
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__prologue_saves__+0x1c>
 2c4:	0d 89       	ldd	r16, Y+21	; 0x15
 2c6:	1e 89       	ldd	r17, Y+22	; 0x16
 2c8:	86 e0       	ldi	r24, 0x06	; 6
 2ca:	8c 83       	std	Y+4, r24	; 0x04
 2cc:	1a 83       	std	Y+2, r17	; 0x02
 2ce:	09 83       	std	Y+1, r16	; 0x01
 2d0:	8f ef       	ldi	r24, 0xFF	; 255
 2d2:	9f e7       	ldi	r25, 0x7F	; 127
 2d4:	9e 83       	std	Y+6, r25	; 0x06
 2d6:	8d 83       	std	Y+5, r24	; 0x05
 2d8:	ae 01       	movw	r20, r28
 2da:	47 5e       	subi	r20, 0xE7	; 231
 2dc:	5f 4f       	sbci	r21, 0xFF	; 255
 2de:	6f 89       	ldd	r22, Y+23	; 0x17
 2e0:	78 8d       	ldd	r23, Y+24	; 0x18
 2e2:	ce 01       	movw	r24, r28
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	0e 94 7e 01 	call	0x2fc	; 0x2fc <vfprintf>
 2ea:	ef 81       	ldd	r30, Y+7	; 0x07
 2ec:	f8 85       	ldd	r31, Y+8	; 0x08
 2ee:	e0 0f       	add	r30, r16
 2f0:	f1 1f       	adc	r31, r17
 2f2:	10 82       	st	Z, r1
 2f4:	2e 96       	adiw	r28, 0x0e	; 14
 2f6:	e4 e0       	ldi	r30, 0x04	; 4
 2f8:	0c 94 39 04 	jmp	0x872	; 0x872 <__epilogue_restores__+0x1c>

000002fc <vfprintf>:
 2fc:	ab e0       	ldi	r26, 0x0B	; 11
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	e4 e8       	ldi	r30, 0x84	; 132
 302:	f1 e0       	ldi	r31, 0x01	; 1
 304:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__prologue_saves__>
 308:	6c 01       	movw	r12, r24
 30a:	7b 01       	movw	r14, r22
 30c:	8a 01       	movw	r16, r20
 30e:	fc 01       	movw	r30, r24
 310:	17 82       	std	Z+7, r1	; 0x07
 312:	16 82       	std	Z+6, r1	; 0x06
 314:	83 81       	ldd	r24, Z+3	; 0x03
 316:	81 ff       	sbrs	r24, 1
 318:	cc c1       	rjmp	.+920    	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
 31a:	ce 01       	movw	r24, r28
 31c:	01 96       	adiw	r24, 0x01	; 1
 31e:	3c 01       	movw	r6, r24
 320:	f6 01       	movw	r30, r12
 322:	93 81       	ldd	r25, Z+3	; 0x03
 324:	f7 01       	movw	r30, r14
 326:	93 fd       	sbrc	r25, 3
 328:	85 91       	lpm	r24, Z+
 32a:	93 ff       	sbrs	r25, 3
 32c:	81 91       	ld	r24, Z+
 32e:	7f 01       	movw	r14, r30
 330:	88 23       	and	r24, r24
 332:	09 f4       	brne	.+2      	; 0x336 <vfprintf+0x3a>
 334:	ba c1       	rjmp	.+884    	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 336:	85 32       	cpi	r24, 0x25	; 37
 338:	39 f4       	brne	.+14     	; 0x348 <vfprintf+0x4c>
 33a:	93 fd       	sbrc	r25, 3
 33c:	85 91       	lpm	r24, Z+
 33e:	93 ff       	sbrs	r25, 3
 340:	81 91       	ld	r24, Z+
 342:	7f 01       	movw	r14, r30
 344:	85 32       	cpi	r24, 0x25	; 37
 346:	29 f4       	brne	.+10     	; 0x352 <vfprintf+0x56>
 348:	b6 01       	movw	r22, r12
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 350:	e7 cf       	rjmp	.-50     	; 0x320 <vfprintf+0x24>
 352:	91 2c       	mov	r9, r1
 354:	21 2c       	mov	r2, r1
 356:	31 2c       	mov	r3, r1
 358:	ff e1       	ldi	r31, 0x1F	; 31
 35a:	f3 15       	cp	r31, r3
 35c:	d8 f0       	brcs	.+54     	; 0x394 <vfprintf+0x98>
 35e:	8b 32       	cpi	r24, 0x2B	; 43
 360:	79 f0       	breq	.+30     	; 0x380 <vfprintf+0x84>
 362:	38 f4       	brcc	.+14     	; 0x372 <vfprintf+0x76>
 364:	80 32       	cpi	r24, 0x20	; 32
 366:	79 f0       	breq	.+30     	; 0x386 <vfprintf+0x8a>
 368:	83 32       	cpi	r24, 0x23	; 35
 36a:	a1 f4       	brne	.+40     	; 0x394 <vfprintf+0x98>
 36c:	23 2d       	mov	r18, r3
 36e:	20 61       	ori	r18, 0x10	; 16
 370:	1d c0       	rjmp	.+58     	; 0x3ac <vfprintf+0xb0>
 372:	8d 32       	cpi	r24, 0x2D	; 45
 374:	61 f0       	breq	.+24     	; 0x38e <vfprintf+0x92>
 376:	80 33       	cpi	r24, 0x30	; 48
 378:	69 f4       	brne	.+26     	; 0x394 <vfprintf+0x98>
 37a:	23 2d       	mov	r18, r3
 37c:	21 60       	ori	r18, 0x01	; 1
 37e:	16 c0       	rjmp	.+44     	; 0x3ac <vfprintf+0xb0>
 380:	83 2d       	mov	r24, r3
 382:	82 60       	ori	r24, 0x02	; 2
 384:	38 2e       	mov	r3, r24
 386:	e3 2d       	mov	r30, r3
 388:	e4 60       	ori	r30, 0x04	; 4
 38a:	3e 2e       	mov	r3, r30
 38c:	2a c0       	rjmp	.+84     	; 0x3e2 <vfprintf+0xe6>
 38e:	f3 2d       	mov	r31, r3
 390:	f8 60       	ori	r31, 0x08	; 8
 392:	1d c0       	rjmp	.+58     	; 0x3ce <vfprintf+0xd2>
 394:	37 fc       	sbrc	r3, 7
 396:	2d c0       	rjmp	.+90     	; 0x3f2 <vfprintf+0xf6>
 398:	20 ed       	ldi	r18, 0xD0	; 208
 39a:	28 0f       	add	r18, r24
 39c:	2a 30       	cpi	r18, 0x0A	; 10
 39e:	40 f0       	brcs	.+16     	; 0x3b0 <vfprintf+0xb4>
 3a0:	8e 32       	cpi	r24, 0x2E	; 46
 3a2:	b9 f4       	brne	.+46     	; 0x3d2 <vfprintf+0xd6>
 3a4:	36 fc       	sbrc	r3, 6
 3a6:	81 c1       	rjmp	.+770    	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 3a8:	23 2d       	mov	r18, r3
 3aa:	20 64       	ori	r18, 0x40	; 64
 3ac:	32 2e       	mov	r3, r18
 3ae:	19 c0       	rjmp	.+50     	; 0x3e2 <vfprintf+0xe6>
 3b0:	36 fe       	sbrs	r3, 6
 3b2:	06 c0       	rjmp	.+12     	; 0x3c0 <vfprintf+0xc4>
 3b4:	8a e0       	ldi	r24, 0x0A	; 10
 3b6:	98 9e       	mul	r9, r24
 3b8:	20 0d       	add	r18, r0
 3ba:	11 24       	eor	r1, r1
 3bc:	92 2e       	mov	r9, r18
 3be:	11 c0       	rjmp	.+34     	; 0x3e2 <vfprintf+0xe6>
 3c0:	ea e0       	ldi	r30, 0x0A	; 10
 3c2:	2e 9e       	mul	r2, r30
 3c4:	20 0d       	add	r18, r0
 3c6:	11 24       	eor	r1, r1
 3c8:	22 2e       	mov	r2, r18
 3ca:	f3 2d       	mov	r31, r3
 3cc:	f0 62       	ori	r31, 0x20	; 32
 3ce:	3f 2e       	mov	r3, r31
 3d0:	08 c0       	rjmp	.+16     	; 0x3e2 <vfprintf+0xe6>
 3d2:	8c 36       	cpi	r24, 0x6C	; 108
 3d4:	21 f4       	brne	.+8      	; 0x3de <vfprintf+0xe2>
 3d6:	83 2d       	mov	r24, r3
 3d8:	80 68       	ori	r24, 0x80	; 128
 3da:	38 2e       	mov	r3, r24
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <vfprintf+0xe6>
 3de:	88 36       	cpi	r24, 0x68	; 104
 3e0:	41 f4       	brne	.+16     	; 0x3f2 <vfprintf+0xf6>
 3e2:	f7 01       	movw	r30, r14
 3e4:	93 fd       	sbrc	r25, 3
 3e6:	85 91       	lpm	r24, Z+
 3e8:	93 ff       	sbrs	r25, 3
 3ea:	81 91       	ld	r24, Z+
 3ec:	7f 01       	movw	r14, r30
 3ee:	81 11       	cpse	r24, r1
 3f0:	b3 cf       	rjmp	.-154    	; 0x358 <vfprintf+0x5c>
 3f2:	98 2f       	mov	r25, r24
 3f4:	9f 7d       	andi	r25, 0xDF	; 223
 3f6:	95 54       	subi	r25, 0x45	; 69
 3f8:	93 30       	cpi	r25, 0x03	; 3
 3fa:	28 f4       	brcc	.+10     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3fc:	0c 5f       	subi	r16, 0xFC	; 252
 3fe:	1f 4f       	sbci	r17, 0xFF	; 255
 400:	9f e3       	ldi	r25, 0x3F	; 63
 402:	99 83       	std	Y+1, r25	; 0x01
 404:	0d c0       	rjmp	.+26     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 406:	83 36       	cpi	r24, 0x63	; 99
 408:	31 f0       	breq	.+12     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 40a:	83 37       	cpi	r24, 0x73	; 115
 40c:	71 f0       	breq	.+28     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 40e:	83 35       	cpi	r24, 0x53	; 83
 410:	09 f0       	breq	.+2      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 412:	59 c0       	rjmp	.+178    	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 414:	21 c0       	rjmp	.+66     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 416:	f8 01       	movw	r30, r16
 418:	80 81       	ld	r24, Z
 41a:	89 83       	std	Y+1, r24	; 0x01
 41c:	0e 5f       	subi	r16, 0xFE	; 254
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	88 24       	eor	r8, r8
 422:	83 94       	inc	r8
 424:	91 2c       	mov	r9, r1
 426:	53 01       	movw	r10, r6
 428:	13 c0       	rjmp	.+38     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 42a:	28 01       	movw	r4, r16
 42c:	f2 e0       	ldi	r31, 0x02	; 2
 42e:	4f 0e       	add	r4, r31
 430:	51 1c       	adc	r5, r1
 432:	f8 01       	movw	r30, r16
 434:	a0 80       	ld	r10, Z
 436:	b1 80       	ldd	r11, Z+1	; 0x01
 438:	36 fe       	sbrs	r3, 6
 43a:	03 c0       	rjmp	.+6      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 43c:	69 2d       	mov	r22, r9
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	02 c0       	rjmp	.+4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 442:	6f ef       	ldi	r22, 0xFF	; 255
 444:	7f ef       	ldi	r23, 0xFF	; 255
 446:	c5 01       	movw	r24, r10
 448:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <strnlen>
 44c:	4c 01       	movw	r8, r24
 44e:	82 01       	movw	r16, r4
 450:	f3 2d       	mov	r31, r3
 452:	ff 77       	andi	r31, 0x7F	; 127
 454:	3f 2e       	mov	r3, r31
 456:	16 c0       	rjmp	.+44     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 458:	28 01       	movw	r4, r16
 45a:	22 e0       	ldi	r18, 0x02	; 2
 45c:	42 0e       	add	r4, r18
 45e:	51 1c       	adc	r5, r1
 460:	f8 01       	movw	r30, r16
 462:	a0 80       	ld	r10, Z
 464:	b1 80       	ldd	r11, Z+1	; 0x01
 466:	36 fe       	sbrs	r3, 6
 468:	03 c0       	rjmp	.+6      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 46a:	69 2d       	mov	r22, r9
 46c:	70 e0       	ldi	r23, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 470:	6f ef       	ldi	r22, 0xFF	; 255
 472:	7f ef       	ldi	r23, 0xFF	; 255
 474:	c5 01       	movw	r24, r10
 476:	0e 94 5f 03 	call	0x6be	; 0x6be <strnlen_P>
 47a:	4c 01       	movw	r8, r24
 47c:	f3 2d       	mov	r31, r3
 47e:	f0 68       	ori	r31, 0x80	; 128
 480:	3f 2e       	mov	r3, r31
 482:	82 01       	movw	r16, r4
 484:	33 fc       	sbrc	r3, 3
 486:	1b c0       	rjmp	.+54     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 488:	82 2d       	mov	r24, r2
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	88 16       	cp	r8, r24
 48e:	99 06       	cpc	r9, r25
 490:	b0 f4       	brcc	.+44     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 492:	b6 01       	movw	r22, r12
 494:	80 e2       	ldi	r24, 0x20	; 32
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 49c:	2a 94       	dec	r2
 49e:	f4 cf       	rjmp	.-24     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 4a0:	f5 01       	movw	r30, r10
 4a2:	37 fc       	sbrc	r3, 7
 4a4:	85 91       	lpm	r24, Z+
 4a6:	37 fe       	sbrs	r3, 7
 4a8:	81 91       	ld	r24, Z+
 4aa:	5f 01       	movw	r10, r30
 4ac:	b6 01       	movw	r22, r12
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 4b4:	21 10       	cpse	r2, r1
 4b6:	2a 94       	dec	r2
 4b8:	21 e0       	ldi	r18, 0x01	; 1
 4ba:	82 1a       	sub	r8, r18
 4bc:	91 08       	sbc	r9, r1
 4be:	81 14       	cp	r8, r1
 4c0:	91 04       	cpc	r9, r1
 4c2:	71 f7       	brne	.-36     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 4c4:	e8 c0       	rjmp	.+464    	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 4c6:	84 36       	cpi	r24, 0x64	; 100
 4c8:	11 f0       	breq	.+4      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4ca:	89 36       	cpi	r24, 0x69	; 105
 4cc:	41 f5       	brne	.+80     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4ce:	f8 01       	movw	r30, r16
 4d0:	37 fe       	sbrs	r3, 7
 4d2:	07 c0       	rjmp	.+14     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4d4:	60 81       	ld	r22, Z
 4d6:	71 81       	ldd	r23, Z+1	; 0x01
 4d8:	82 81       	ldd	r24, Z+2	; 0x02
 4da:	93 81       	ldd	r25, Z+3	; 0x03
 4dc:	0c 5f       	subi	r16, 0xFC	; 252
 4de:	1f 4f       	sbci	r17, 0xFF	; 255
 4e0:	08 c0       	rjmp	.+16     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4e2:	60 81       	ld	r22, Z
 4e4:	71 81       	ldd	r23, Z+1	; 0x01
 4e6:	07 2e       	mov	r0, r23
 4e8:	00 0c       	add	r0, r0
 4ea:	88 0b       	sbc	r24, r24
 4ec:	99 0b       	sbc	r25, r25
 4ee:	0e 5f       	subi	r16, 0xFE	; 254
 4f0:	1f 4f       	sbci	r17, 0xFF	; 255
 4f2:	f3 2d       	mov	r31, r3
 4f4:	ff 76       	andi	r31, 0x6F	; 111
 4f6:	3f 2e       	mov	r3, r31
 4f8:	97 ff       	sbrs	r25, 7
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
 4fc:	90 95       	com	r25
 4fe:	80 95       	com	r24
 500:	70 95       	com	r23
 502:	61 95       	neg	r22
 504:	7f 4f       	sbci	r23, 0xFF	; 255
 506:	8f 4f       	sbci	r24, 0xFF	; 255
 508:	9f 4f       	sbci	r25, 0xFF	; 255
 50a:	f0 68       	ori	r31, 0x80	; 128
 50c:	3f 2e       	mov	r3, r31
 50e:	2a e0       	ldi	r18, 0x0A	; 10
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	a3 01       	movw	r20, r6
 514:	0e 94 b1 03 	call	0x762	; 0x762 <__ultoa_invert>
 518:	88 2e       	mov	r8, r24
 51a:	86 18       	sub	r8, r6
 51c:	45 c0       	rjmp	.+138    	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 51e:	85 37       	cpi	r24, 0x75	; 117
 520:	31 f4       	brne	.+12     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 522:	23 2d       	mov	r18, r3
 524:	2f 7e       	andi	r18, 0xEF	; 239
 526:	b2 2e       	mov	r11, r18
 528:	2a e0       	ldi	r18, 0x0A	; 10
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	25 c0       	rjmp	.+74     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
 52e:	93 2d       	mov	r25, r3
 530:	99 7f       	andi	r25, 0xF9	; 249
 532:	b9 2e       	mov	r11, r25
 534:	8f 36       	cpi	r24, 0x6F	; 111
 536:	c1 f0       	breq	.+48     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 538:	18 f4       	brcc	.+6      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 53a:	88 35       	cpi	r24, 0x58	; 88
 53c:	79 f0       	breq	.+30     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 53e:	b5 c0       	rjmp	.+362    	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 540:	80 37       	cpi	r24, 0x70	; 112
 542:	19 f0       	breq	.+6      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 544:	88 37       	cpi	r24, 0x78	; 120
 546:	21 f0       	breq	.+8      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 548:	b0 c0       	rjmp	.+352    	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 54a:	e9 2f       	mov	r30, r25
 54c:	e0 61       	ori	r30, 0x10	; 16
 54e:	be 2e       	mov	r11, r30
 550:	b4 fe       	sbrs	r11, 4
 552:	0d c0       	rjmp	.+26     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 554:	fb 2d       	mov	r31, r11
 556:	f4 60       	ori	r31, 0x04	; 4
 558:	bf 2e       	mov	r11, r31
 55a:	09 c0       	rjmp	.+18     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 55c:	34 fe       	sbrs	r3, 4
 55e:	0a c0       	rjmp	.+20     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 560:	29 2f       	mov	r18, r25
 562:	26 60       	ori	r18, 0x06	; 6
 564:	b2 2e       	mov	r11, r18
 566:	06 c0       	rjmp	.+12     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 568:	28 e0       	ldi	r18, 0x08	; 8
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	05 c0       	rjmp	.+10     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
 56e:	20 e1       	ldi	r18, 0x10	; 16
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	02 c0       	rjmp	.+4      	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
 574:	20 e1       	ldi	r18, 0x10	; 16
 576:	32 e0       	ldi	r19, 0x02	; 2
 578:	f8 01       	movw	r30, r16
 57a:	b7 fe       	sbrs	r11, 7
 57c:	07 c0       	rjmp	.+14     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 57e:	60 81       	ld	r22, Z
 580:	71 81       	ldd	r23, Z+1	; 0x01
 582:	82 81       	ldd	r24, Z+2	; 0x02
 584:	93 81       	ldd	r25, Z+3	; 0x03
 586:	0c 5f       	subi	r16, 0xFC	; 252
 588:	1f 4f       	sbci	r17, 0xFF	; 255
 58a:	06 c0       	rjmp	.+12     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 58c:	60 81       	ld	r22, Z
 58e:	71 81       	ldd	r23, Z+1	; 0x01
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 5f       	subi	r16, 0xFE	; 254
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	a3 01       	movw	r20, r6
 59a:	0e 94 b1 03 	call	0x762	; 0x762 <__ultoa_invert>
 59e:	88 2e       	mov	r8, r24
 5a0:	86 18       	sub	r8, r6
 5a2:	fb 2d       	mov	r31, r11
 5a4:	ff 77       	andi	r31, 0x7F	; 127
 5a6:	3f 2e       	mov	r3, r31
 5a8:	36 fe       	sbrs	r3, 6
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5ac:	23 2d       	mov	r18, r3
 5ae:	2e 7f       	andi	r18, 0xFE	; 254
 5b0:	a2 2e       	mov	r10, r18
 5b2:	89 14       	cp	r8, r9
 5b4:	58 f4       	brcc	.+22     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5b6:	34 fe       	sbrs	r3, 4
 5b8:	0b c0       	rjmp	.+22     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5ba:	32 fc       	sbrc	r3, 2
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5be:	83 2d       	mov	r24, r3
 5c0:	8e 7e       	andi	r24, 0xEE	; 238
 5c2:	a8 2e       	mov	r10, r24
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5c6:	b8 2c       	mov	r11, r8
 5c8:	a3 2c       	mov	r10, r3
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5cc:	b8 2c       	mov	r11, r8
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5d0:	b9 2c       	mov	r11, r9
 5d2:	a4 fe       	sbrs	r10, 4
 5d4:	0f c0       	rjmp	.+30     	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5d6:	fe 01       	movw	r30, r28
 5d8:	e8 0d       	add	r30, r8
 5da:	f1 1d       	adc	r31, r1
 5dc:	80 81       	ld	r24, Z
 5de:	80 33       	cpi	r24, 0x30	; 48
 5e0:	21 f4       	brne	.+8      	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5e2:	9a 2d       	mov	r25, r10
 5e4:	99 7e       	andi	r25, 0xE9	; 233
 5e6:	a9 2e       	mov	r10, r25
 5e8:	09 c0       	rjmp	.+18     	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5ea:	a2 fe       	sbrs	r10, 2
 5ec:	06 c0       	rjmp	.+12     	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5ee:	b3 94       	inc	r11
 5f0:	b3 94       	inc	r11
 5f2:	04 c0       	rjmp	.+8      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5f4:	8a 2d       	mov	r24, r10
 5f6:	86 78       	andi	r24, 0x86	; 134
 5f8:	09 f0       	breq	.+2      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5fa:	b3 94       	inc	r11
 5fc:	a3 fc       	sbrc	r10, 3
 5fe:	11 c0       	rjmp	.+34     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 600:	a0 fe       	sbrs	r10, 0
 602:	06 c0       	rjmp	.+12     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 604:	b2 14       	cp	r11, r2
 606:	88 f4       	brcc	.+34     	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 608:	28 0c       	add	r2, r8
 60a:	92 2c       	mov	r9, r2
 60c:	9b 18       	sub	r9, r11
 60e:	0e c0       	rjmp	.+28     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 610:	b2 14       	cp	r11, r2
 612:	60 f4       	brcc	.+24     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 614:	b6 01       	movw	r22, r12
 616:	80 e2       	ldi	r24, 0x20	; 32
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 61e:	b3 94       	inc	r11
 620:	f7 cf       	rjmp	.-18     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 622:	b2 14       	cp	r11, r2
 624:	18 f4       	brcc	.+6      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 626:	2b 18       	sub	r2, r11
 628:	02 c0       	rjmp	.+4      	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 62a:	98 2c       	mov	r9, r8
 62c:	21 2c       	mov	r2, r1
 62e:	a4 fe       	sbrs	r10, 4
 630:	10 c0       	rjmp	.+32     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 632:	b6 01       	movw	r22, r12
 634:	80 e3       	ldi	r24, 0x30	; 48
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 63c:	a2 fe       	sbrs	r10, 2
 63e:	17 c0       	rjmp	.+46     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 640:	a1 fc       	sbrc	r10, 1
 642:	03 c0       	rjmp	.+6      	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 644:	88 e7       	ldi	r24, 0x78	; 120
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 64a:	88 e5       	ldi	r24, 0x58	; 88
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	b6 01       	movw	r22, r12
 650:	0c c0       	rjmp	.+24     	; 0x66a <__EEPROM_REGION_LENGTH__+0x26a>
 652:	8a 2d       	mov	r24, r10
 654:	86 78       	andi	r24, 0x86	; 134
 656:	59 f0       	breq	.+22     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 658:	a1 fe       	sbrs	r10, 1
 65a:	02 c0       	rjmp	.+4      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 65c:	8b e2       	ldi	r24, 0x2B	; 43
 65e:	01 c0       	rjmp	.+2      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	a7 fc       	sbrc	r10, 7
 664:	8d e2       	ldi	r24, 0x2D	; 45
 666:	b6 01       	movw	r22, r12
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 66e:	89 14       	cp	r8, r9
 670:	38 f4       	brcc	.+14     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 672:	b6 01       	movw	r22, r12
 674:	80 e3       	ldi	r24, 0x30	; 48
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 67c:	9a 94       	dec	r9
 67e:	f7 cf       	rjmp	.-18     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 680:	8a 94       	dec	r8
 682:	f3 01       	movw	r30, r6
 684:	e8 0d       	add	r30, r8
 686:	f1 1d       	adc	r31, r1
 688:	80 81       	ld	r24, Z
 68a:	b6 01       	movw	r22, r12
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 692:	81 10       	cpse	r8, r1
 694:	f5 cf       	rjmp	.-22     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 696:	22 20       	and	r2, r2
 698:	09 f4       	brne	.+2      	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
 69a:	42 ce       	rjmp	.-892    	; 0x320 <vfprintf+0x24>
 69c:	b6 01       	movw	r22, r12
 69e:	80 e2       	ldi	r24, 0x20	; 32
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 75 03 	call	0x6ea	; 0x6ea <fputc>
 6a6:	2a 94       	dec	r2
 6a8:	f6 cf       	rjmp	.-20     	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 6aa:	f6 01       	movw	r30, r12
 6ac:	86 81       	ldd	r24, Z+6	; 0x06
 6ae:	97 81       	ldd	r25, Z+7	; 0x07
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <__EEPROM_REGION_LENGTH__+0x2b6>
 6b2:	8f ef       	ldi	r24, 0xFF	; 255
 6b4:	9f ef       	ldi	r25, 0xFF	; 255
 6b6:	2b 96       	adiw	r28, 0x0b	; 11
 6b8:	e2 e1       	ldi	r30, 0x12	; 18
 6ba:	0c 94 2b 04 	jmp	0x856	; 0x856 <__epilogue_restores__>

000006be <strnlen_P>:
 6be:	fc 01       	movw	r30, r24
 6c0:	05 90       	lpm	r0, Z+
 6c2:	61 50       	subi	r22, 0x01	; 1
 6c4:	70 40       	sbci	r23, 0x00	; 0
 6c6:	01 10       	cpse	r0, r1
 6c8:	d8 f7       	brcc	.-10     	; 0x6c0 <strnlen_P+0x2>
 6ca:	80 95       	com	r24
 6cc:	90 95       	com	r25
 6ce:	8e 0f       	add	r24, r30
 6d0:	9f 1f       	adc	r25, r31
 6d2:	08 95       	ret

000006d4 <strnlen>:
 6d4:	fc 01       	movw	r30, r24
 6d6:	61 50       	subi	r22, 0x01	; 1
 6d8:	70 40       	sbci	r23, 0x00	; 0
 6da:	01 90       	ld	r0, Z+
 6dc:	01 10       	cpse	r0, r1
 6de:	d8 f7       	brcc	.-10     	; 0x6d6 <strnlen+0x2>
 6e0:	80 95       	com	r24
 6e2:	90 95       	com	r25
 6e4:	8e 0f       	add	r24, r30
 6e6:	9f 1f       	adc	r25, r31
 6e8:	08 95       	ret

000006ea <fputc>:
 6ea:	0f 93       	push	r16
 6ec:	1f 93       	push	r17
 6ee:	cf 93       	push	r28
 6f0:	df 93       	push	r29
 6f2:	fb 01       	movw	r30, r22
 6f4:	23 81       	ldd	r18, Z+3	; 0x03
 6f6:	21 fd       	sbrc	r18, 1
 6f8:	03 c0       	rjmp	.+6      	; 0x700 <fputc+0x16>
 6fa:	8f ef       	ldi	r24, 0xFF	; 255
 6fc:	9f ef       	ldi	r25, 0xFF	; 255
 6fe:	2c c0       	rjmp	.+88     	; 0x758 <fputc+0x6e>
 700:	22 ff       	sbrs	r18, 2
 702:	16 c0       	rjmp	.+44     	; 0x730 <fputc+0x46>
 704:	46 81       	ldd	r20, Z+6	; 0x06
 706:	57 81       	ldd	r21, Z+7	; 0x07
 708:	24 81       	ldd	r18, Z+4	; 0x04
 70a:	35 81       	ldd	r19, Z+5	; 0x05
 70c:	42 17       	cp	r20, r18
 70e:	53 07       	cpc	r21, r19
 710:	44 f4       	brge	.+16     	; 0x722 <fputc+0x38>
 712:	a0 81       	ld	r26, Z
 714:	b1 81       	ldd	r27, Z+1	; 0x01
 716:	9d 01       	movw	r18, r26
 718:	2f 5f       	subi	r18, 0xFF	; 255
 71a:	3f 4f       	sbci	r19, 0xFF	; 255
 71c:	31 83       	std	Z+1, r19	; 0x01
 71e:	20 83       	st	Z, r18
 720:	8c 93       	st	X, r24
 722:	26 81       	ldd	r18, Z+6	; 0x06
 724:	37 81       	ldd	r19, Z+7	; 0x07
 726:	2f 5f       	subi	r18, 0xFF	; 255
 728:	3f 4f       	sbci	r19, 0xFF	; 255
 72a:	37 83       	std	Z+7, r19	; 0x07
 72c:	26 83       	std	Z+6, r18	; 0x06
 72e:	14 c0       	rjmp	.+40     	; 0x758 <fputc+0x6e>
 730:	8b 01       	movw	r16, r22
 732:	ec 01       	movw	r28, r24
 734:	fb 01       	movw	r30, r22
 736:	00 84       	ldd	r0, Z+8	; 0x08
 738:	f1 85       	ldd	r31, Z+9	; 0x09
 73a:	e0 2d       	mov	r30, r0
 73c:	09 95       	icall
 73e:	89 2b       	or	r24, r25
 740:	e1 f6       	brne	.-72     	; 0x6fa <fputc+0x10>
 742:	d8 01       	movw	r26, r16
 744:	16 96       	adiw	r26, 0x06	; 6
 746:	8d 91       	ld	r24, X+
 748:	9c 91       	ld	r25, X
 74a:	17 97       	sbiw	r26, 0x07	; 7
 74c:	01 96       	adiw	r24, 0x01	; 1
 74e:	17 96       	adiw	r26, 0x07	; 7
 750:	9c 93       	st	X, r25
 752:	8e 93       	st	-X, r24
 754:	16 97       	sbiw	r26, 0x06	; 6
 756:	ce 01       	movw	r24, r28
 758:	df 91       	pop	r29
 75a:	cf 91       	pop	r28
 75c:	1f 91       	pop	r17
 75e:	0f 91       	pop	r16
 760:	08 95       	ret

00000762 <__ultoa_invert>:
 762:	fa 01       	movw	r30, r20
 764:	aa 27       	eor	r26, r26
 766:	28 30       	cpi	r18, 0x08	; 8
 768:	51 f1       	breq	.+84     	; 0x7be <__ultoa_invert+0x5c>
 76a:	20 31       	cpi	r18, 0x10	; 16
 76c:	81 f1       	breq	.+96     	; 0x7ce <__ultoa_invert+0x6c>
 76e:	e8 94       	clt
 770:	6f 93       	push	r22
 772:	6e 7f       	andi	r22, 0xFE	; 254
 774:	6e 5f       	subi	r22, 0xFE	; 254
 776:	7f 4f       	sbci	r23, 0xFF	; 255
 778:	8f 4f       	sbci	r24, 0xFF	; 255
 77a:	9f 4f       	sbci	r25, 0xFF	; 255
 77c:	af 4f       	sbci	r26, 0xFF	; 255
 77e:	b1 e0       	ldi	r27, 0x01	; 1
 780:	3e d0       	rcall	.+124    	; 0x7fe <__ultoa_invert+0x9c>
 782:	b4 e0       	ldi	r27, 0x04	; 4
 784:	3c d0       	rcall	.+120    	; 0x7fe <__ultoa_invert+0x9c>
 786:	67 0f       	add	r22, r23
 788:	78 1f       	adc	r23, r24
 78a:	89 1f       	adc	r24, r25
 78c:	9a 1f       	adc	r25, r26
 78e:	a1 1d       	adc	r26, r1
 790:	68 0f       	add	r22, r24
 792:	79 1f       	adc	r23, r25
 794:	8a 1f       	adc	r24, r26
 796:	91 1d       	adc	r25, r1
 798:	a1 1d       	adc	r26, r1
 79a:	6a 0f       	add	r22, r26
 79c:	71 1d       	adc	r23, r1
 79e:	81 1d       	adc	r24, r1
 7a0:	91 1d       	adc	r25, r1
 7a2:	a1 1d       	adc	r26, r1
 7a4:	20 d0       	rcall	.+64     	; 0x7e6 <__ultoa_invert+0x84>
 7a6:	09 f4       	brne	.+2      	; 0x7aa <__ultoa_invert+0x48>
 7a8:	68 94       	set
 7aa:	3f 91       	pop	r19
 7ac:	2a e0       	ldi	r18, 0x0A	; 10
 7ae:	26 9f       	mul	r18, r22
 7b0:	11 24       	eor	r1, r1
 7b2:	30 19       	sub	r19, r0
 7b4:	30 5d       	subi	r19, 0xD0	; 208
 7b6:	31 93       	st	Z+, r19
 7b8:	de f6       	brtc	.-74     	; 0x770 <__ultoa_invert+0xe>
 7ba:	cf 01       	movw	r24, r30
 7bc:	08 95       	ret
 7be:	46 2f       	mov	r20, r22
 7c0:	47 70       	andi	r20, 0x07	; 7
 7c2:	40 5d       	subi	r20, 0xD0	; 208
 7c4:	41 93       	st	Z+, r20
 7c6:	b3 e0       	ldi	r27, 0x03	; 3
 7c8:	0f d0       	rcall	.+30     	; 0x7e8 <__ultoa_invert+0x86>
 7ca:	c9 f7       	brne	.-14     	; 0x7be <__ultoa_invert+0x5c>
 7cc:	f6 cf       	rjmp	.-20     	; 0x7ba <__ultoa_invert+0x58>
 7ce:	46 2f       	mov	r20, r22
 7d0:	4f 70       	andi	r20, 0x0F	; 15
 7d2:	40 5d       	subi	r20, 0xD0	; 208
 7d4:	4a 33       	cpi	r20, 0x3A	; 58
 7d6:	18 f0       	brcs	.+6      	; 0x7de <__ultoa_invert+0x7c>
 7d8:	49 5d       	subi	r20, 0xD9	; 217
 7da:	31 fd       	sbrc	r19, 1
 7dc:	40 52       	subi	r20, 0x20	; 32
 7de:	41 93       	st	Z+, r20
 7e0:	02 d0       	rcall	.+4      	; 0x7e6 <__ultoa_invert+0x84>
 7e2:	a9 f7       	brne	.-22     	; 0x7ce <__ultoa_invert+0x6c>
 7e4:	ea cf       	rjmp	.-44     	; 0x7ba <__ultoa_invert+0x58>
 7e6:	b4 e0       	ldi	r27, 0x04	; 4
 7e8:	a6 95       	lsr	r26
 7ea:	97 95       	ror	r25
 7ec:	87 95       	ror	r24
 7ee:	77 95       	ror	r23
 7f0:	67 95       	ror	r22
 7f2:	ba 95       	dec	r27
 7f4:	c9 f7       	brne	.-14     	; 0x7e8 <__ultoa_invert+0x86>
 7f6:	00 97       	sbiw	r24, 0x00	; 0
 7f8:	61 05       	cpc	r22, r1
 7fa:	71 05       	cpc	r23, r1
 7fc:	08 95       	ret
 7fe:	9b 01       	movw	r18, r22
 800:	ac 01       	movw	r20, r24
 802:	0a 2e       	mov	r0, r26
 804:	06 94       	lsr	r0
 806:	57 95       	ror	r21
 808:	47 95       	ror	r20
 80a:	37 95       	ror	r19
 80c:	27 95       	ror	r18
 80e:	ba 95       	dec	r27
 810:	c9 f7       	brne	.-14     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 812:	62 0f       	add	r22, r18
 814:	73 1f       	adc	r23, r19
 816:	84 1f       	adc	r24, r20
 818:	95 1f       	adc	r25, r21
 81a:	a0 1d       	adc	r26, r0
 81c:	08 95       	ret

0000081e <__prologue_saves__>:
 81e:	2f 92       	push	r2
 820:	3f 92       	push	r3
 822:	4f 92       	push	r4
 824:	5f 92       	push	r5
 826:	6f 92       	push	r6
 828:	7f 92       	push	r7
 82a:	8f 92       	push	r8
 82c:	9f 92       	push	r9
 82e:	af 92       	push	r10
 830:	bf 92       	push	r11
 832:	cf 92       	push	r12
 834:	df 92       	push	r13
 836:	ef 92       	push	r14
 838:	ff 92       	push	r15
 83a:	0f 93       	push	r16
 83c:	1f 93       	push	r17
 83e:	cf 93       	push	r28
 840:	df 93       	push	r29
 842:	cd b7       	in	r28, 0x3d	; 61
 844:	de b7       	in	r29, 0x3e	; 62
 846:	ca 1b       	sub	r28, r26
 848:	db 0b       	sbc	r29, r27
 84a:	0f b6       	in	r0, 0x3f	; 63
 84c:	f8 94       	cli
 84e:	de bf       	out	0x3e, r29	; 62
 850:	0f be       	out	0x3f, r0	; 63
 852:	cd bf       	out	0x3d, r28	; 61
 854:	09 94       	ijmp

00000856 <__epilogue_restores__>:
 856:	2a 88       	ldd	r2, Y+18	; 0x12
 858:	39 88       	ldd	r3, Y+17	; 0x11
 85a:	48 88       	ldd	r4, Y+16	; 0x10
 85c:	5f 84       	ldd	r5, Y+15	; 0x0f
 85e:	6e 84       	ldd	r6, Y+14	; 0x0e
 860:	7d 84       	ldd	r7, Y+13	; 0x0d
 862:	8c 84       	ldd	r8, Y+12	; 0x0c
 864:	9b 84       	ldd	r9, Y+11	; 0x0b
 866:	aa 84       	ldd	r10, Y+10	; 0x0a
 868:	b9 84       	ldd	r11, Y+9	; 0x09
 86a:	c8 84       	ldd	r12, Y+8	; 0x08
 86c:	df 80       	ldd	r13, Y+7	; 0x07
 86e:	ee 80       	ldd	r14, Y+6	; 0x06
 870:	fd 80       	ldd	r15, Y+5	; 0x05
 872:	0c 81       	ldd	r16, Y+4	; 0x04
 874:	1b 81       	ldd	r17, Y+3	; 0x03
 876:	aa 81       	ldd	r26, Y+2	; 0x02
 878:	b9 81       	ldd	r27, Y+1	; 0x01
 87a:	ce 0f       	add	r28, r30
 87c:	d1 1d       	adc	r29, r1
 87e:	0f b6       	in	r0, 0x3f	; 63
 880:	f8 94       	cli
 882:	de bf       	out	0x3e, r29	; 62
 884:	0f be       	out	0x3f, r0	; 63
 886:	cd bf       	out	0x3d, r28	; 61
 888:	ed 01       	movw	r28, r26
 88a:	08 95       	ret

0000088c <_exit>:
 88c:	f8 94       	cli

0000088e <__stop_program>:
 88e:	ff cf       	rjmp	.-2      	; 0x88e <__stop_program>
